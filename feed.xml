<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DEV Maytok</title>
    <description>Apuntes sobre desarrollo y tecnología en general.</description>
    <link>http://dev.maytok.com/</link>
    <atom:link href="http://dev.maytok.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 23 Feb 2017 13:27:49 -0500</pubDate>
    <lastBuildDate>Thu, 23 Feb 2017 13:27:49 -0500</lastBuildDate>
    <generator>Jekyll v3.4.0</generator>
    
      <item>
        <title>Proyecto Maytok</title>
        <description>&lt;p&gt;El proyecto Maytok es la respuesta personal al &lt;a href=&quot;https://twitter.com/search?q=%23100DaysOfCode&amp;amp;src=khanmaytok&quot;&gt;#100DaysOfCode&lt;/a&gt;, una iniciativa que busca mejorarnos como programadores a través de practicar 100 días por una hora diaria (no incluye trabajos ni lectura de ejercicios)&lt;/p&gt;

&lt;p&gt;Para los 100 días he planeado construir un sitio donde pueda publicar capítulos de los distintos libros que se me ocurran. No será un blog, como éste, sino gestionará los libros, capítulos y demás media que vaya apareciendo con el paso del tiempo.&lt;/p&gt;

&lt;p&gt;Usaremos este post como índice de todos los artículos relacionados con el tema que vayan apareciendo.&lt;/p&gt;

</description>
        <pubDate>Thu, 23 Feb 2017 11:10:04 -0500</pubDate>
        <link>http://dev.maytok.com/meta/2017/02/23/proyecto-maytok/</link>
        <guid isPermaLink="true">http://dev.maytok.com/meta/2017/02/23/proyecto-maytok/</guid>
        
        <category>maytok,</category>
        
        <category>meta</category>
        
        
        <category>meta</category>
        
      </item>
    
      <item>
        <title>Día 1 - El blog | #100DaysOfCode </title>
        <description>&lt;p&gt;El día uno está dedicado a… este blog.&lt;/p&gt;

&lt;p&gt;¿Trampa? Quizá.&lt;/p&gt;

&lt;p&gt;Primiero, el motor: este blog está realizado gracias a &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, un generador de páginas estáticas hecho en Ruby. Lo hemos elegido por su simplicidad: solo necesitas instalarlo y funciona. Además está orientado a blogs, aunque por supuesto, puedes usarlo para cualquier otra estructura que desees.&lt;/p&gt;

&lt;p&gt;Quizá puede parecer poco productivo y uno podría preguntarse por qué no usar soluciones más potentes como Wordpress, pero en este caso, Jekyll es todo lo que necesito. Sin bases de datos, y usa el poder de Markdown. Para administrarlo, tenemos un plugin bastante útil: &lt;a href=&quot;https://github.com/jekyll/jekyll-admin&quot;&gt;Jekyll Admin&lt;/a&gt; que nos brinda las funcionalidades clásicas de un CMS.&lt;/p&gt;

&lt;p&gt;Si lo deseas, puedes [darle un vistazo al repositorio]https://github.com/khanmaytok/maytok-blog-source) y sugerir cambios y mejoras.&lt;/p&gt;

&lt;p&gt;El tema está tomado integramente del artículo &lt;a href=&quot;https://tympanus.net/codrops/2015/04/15/grid-item-animation-layout/&quot;&gt;Grid Item Animation Layout&lt;/a&gt; del fantástico sitio Codrops. Las adaptaciones que se han hecho han sido mínimas y me ha gustado mucho el efecto de carga y el estilo mínimal del tema.&lt;/p&gt;

&lt;p class=&quot;text-center&quot;&gt;
&lt;img src=&quot;https://codropspz-tympanus.netdna-ssl.com/codrops/wp-content/uploads/2015/04/GridItemAnimation_02.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;¿El hosting? Github Pages. Podemos usar un repositorio de Github para publicar páginas estáticas de acuerdo, claro, a las políticas de la organización y para optimizar la entrega del contenido usamos el CDN gratuito que nos brinda CloudFlare.&lt;/p&gt;

&lt;p&gt;Como puedes ver, montar un blog puede ser bastante sencillo y fácil.&lt;/p&gt;

&lt;p&gt;Recuerda que siempre puedes sugerir cambios a esta publicación y realizar críticas demoledoras en cualquier momento&lt;/p&gt;

&lt;p&gt;¡Eso ese todo por ahora. Nos estamos leyendo!&lt;/p&gt;

</description>
        <pubDate>Thu, 23 Feb 2017 01:13:00 -0500</pubDate>
        <link>http://dev.maytok.com/jekyll/2017/02/23/dia-1-el-blog/</link>
        <guid isPermaLink="true">http://dev.maytok.com/jekyll/2017/02/23/dia-1-el-blog/</guid>
        
        <category>jekyll</category>
        
        <category>blog</category>
        
        <category>Github Pages</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Autenticación con password en Apache</title>
        <description>&lt;p&gt;A menudo, cuando levantamos un servidor, queremos restringir el acceso a partes del mismo.
Si bien hay innumerables maneras de lograrlo, una muy fácil y sencilla es 
usar una de las utilidades que Apache nos brinda. Hoy aprenderemos como.&lt;/p&gt;

&lt;p&gt;Necesitaremos, obviamente, apache y un paquete de utilidades&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-cli&quot;&gt;
sudo apt-get update
sudo apt-get install apache2 apache2-utils
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Ahora vamos a crear el archivo de usuarios y claves. Si vamos a hacerlo por primera vez, 
debemos añadir el flag &lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; al comando, cosa que obviaremos si vamos a añadir otro.&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-cli&quot;&gt;
sudo htpasswd -c /etc/apache2/.htpasswd waka
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;La terminal te pedirá una contraseña. Recuerda que para añadir un usuario debes escribir…&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-cli&quot;&gt;
sudo htpasswd /etc/apache2/.htpasswd nuevo_waka_user
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Espera, espera… ¿estamos guardando los usuarios y sus contraseñas en texto plano?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No. Si revisamos el contenido del archivo .htpasswd, veremos algo como…&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-cli&quot;&gt;
waka:$apr1$lz.IfXG$tsC.vCwb49vfPF$GVsuYz.
nuevo_waka_user:$apr1$p1E9MeAf$k.eUewr.MhAE2kKGYHK.
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;¡Genial, ahora tengo todo protegido!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Aun no… Hemos creado la llave, ahora crearemos la cerradura.&lt;/p&gt;

&lt;p&gt;No importa si proteges el directorio con .htaccess o un virtual host, el comando es el mismo.
Solo tienes que escribir tres líneas para estar listo:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-apacheconf&quot;&gt;
&amp;lt;Directory &quot;/var/www/html&quot;&amp;gt;
    AuthType Basic
    AuthName &quot;Restricted Content&quot;
    AuthUserFile /etc/apache2/.htpasswd
    Require valid-user
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;En el ejemplo, estamos protegiendo el directorio &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;/var/www/html&quot;&lt;/code&gt; con los usuarios que
pusimos en el archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;.htpasswd&lt;/code&gt;. Ahora, si ingresamos, veremos algo como:&lt;/p&gt;

</description>
        <pubDate>Mon, 09 May 2016 06:14:34 -0500</pubDate>
        <link>http://dev.maytok.com/servidores/2016/05/09/autenticacion-password-apache/</link>
        <guid isPermaLink="true">http://dev.maytok.com/servidores/2016/05/09/autenticacion-password-apache/</guid>
        
        <category>apache</category>
        
        <category>password</category>
        
        <category>ubuntu</category>
        
        
        <category>Servidores</category>
        
      </item>
    
      <item>
        <title>Importación masiva con doctrine</title>
        <description>&lt;p&gt;Las importaciones masivas de datos, también conocidas como &lt;em&gt;bulk inserts&lt;/em&gt;, son 
una manera para, en una base de datos, insertar muchas filas en una tabla con 
una sola transacción.&lt;/p&gt;

&lt;p&gt;Para doctrine, hay una manera fácil y genial de realizarla:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-php&quot;&gt;
&amp;lt;?php
$batchSize = 20; //Número de filas para insertar a la vez
for ($i = 1; $i &amp;lt;= 10000; ++$i) {
    $user = new CmsUser;
    $user-&amp;gt;setStatus('user');
    $user-&amp;gt;setUsername('user' . $i);
    $user-&amp;gt;setName('Mr.Smith-' . $i);
    $em-&amp;gt;persist($user);
    if (($i % $batchSize) === 0) {
        $em-&amp;gt;flush();
        $em-&amp;gt;clear(); // Limpiamos todos los objetos de Doctrine. Importante!
    }
}
$em-&amp;gt;flush(); //Guardamos los objetos que se han quedado afuera del batch
$em-&amp;gt;clear();
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Si deseas conocer más, aquí puedes encontrar toda la (documentación de Doctrine)[http://doctrine-orm.readthedocs.org/en/latest/reference/batch-processing.html]
sobre el tema (en inglés). Y como siempre, gracias por leernos.&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Apr 2016 04:14:34 -0500</pubDate>
        <link>http://dev.maytok.com/php/2016/04/16/bulk-inserts-doctrine/</link>
        <guid isPermaLink="true">http://dev.maytok.com/php/2016/04/16/bulk-inserts-doctrine/</guid>
        
        <category>doctrine</category>
        
        <category>php</category>
        
        <category>mysql</category>
        
        
        <category>PHP</category>
        
      </item>
    
      <item>
        <title>Habilitar WebGL en Ionic con Crosswalk</title>
        <description>&lt;p&gt;En Android, puede ser complicado mostrar proyectos basados en WebGL si se usa Ionic Framework. 
Ionic se basa en Cordova, que permite desarrollar aplicaciones basadas en un WebView.&lt;/p&gt;

&lt;p&gt;¿Cuál es el problema? WebGL no es soportado en WebViews para versiones anteriores que 
Android Lollipop.
En KitKat, Android cambió a Chromium como la implementación de  WebView nativa, 
pero está bloqueada a Chromium 33, que no tiene WebGL. En Lollipop, sin embargo, 
puedes habilitarlo a través de una actualización vía Play Store, para habilitar el soporte. 
(fuente: https://developer.chrome.com/multidevice/webview/overview)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Wow, wow, y para las otras versiones de Android? ¿Imposible?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Crosswalk entra al rescate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Cross… qué?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Uno de los problemas que acarrea el desarrollo de aplicaciones HTML5 híbridas es
que ante la variedad de plataformas móviles (y versiones dentro de cada una), 
no tienes seguridad de qué APIs de Javascript y soporte a capacidades de CSS 
estarán disponibles en el dispositivo donde se ejecutará tu app. El proyecto 
Crosswalk busca atacar este problema. Crosswalk es un runtime HTML que incluyes 
en tu app, de manera que tu app funcione sobre éste y se comporta de la misma forma
en cualquier dispositivo. Crosswalk es open source, así que no solo es gratuito
sino que también puedes modificarlo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Y está en Ionic?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;¡Claro! solo tienes que ejecutar:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cli&quot; data-lang=&quot;cli&quot;&gt;ionic browser add crosswalk&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Y Crosswalk estará habilitado en tu proyecto. Ahora, solo te falta añadir unas líneas más:
Y es que por defecto, Chromium tiene una lista negra de GPU’s, en donde no permite ejecutar
WebGL. Puedes dejarla como está, pero no funcionará en muchos dispositivos. Así que en el archivo 
&lt;code class=&quot;highlighter-rouge&quot;&gt;config.xml&lt;/code&gt; solo tienes que agregar el siguiente flag: &lt;code class=&quot;highlighter-rouge&quot;&gt;--ignore-gpu-blacklist&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;preference&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xwalkCommandLine&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;--disable-pull-to-refresh-effect --ignore-gpu-blacklist&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;¿Sencillo, verdad? Ahora WebGL funciona en tu proyecto.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Apr 2016 10:14:34 -0500</pubDate>
        <link>http://dev.maytok.com/mobile/2016/04/14/habilitar-webgl-ionic/</link>
        <guid isPermaLink="true">http://dev.maytok.com/mobile/2016/04/14/habilitar-webgl-ionic/</guid>
        
        <category>ionic</category>
        
        <category>crosswalk</category>
        
        
        <category>Mobile</category>
        
      </item>
    
      <item>
        <title>Instalar Jekyll en Windows sin dolor</title>
        <description>&lt;p&gt;Instalar Jekyll en Windows por vez primera puede ser un auténtico dolor… en la parte del cuerpo que quieras.
Afortunadamente, la cantidad de pasos puede reducirse 
significativamente y podemos comenzar a crear nuestros sitios estáticos sin seguir un camino
complicado y lleno de espinos. Nuestra ruta adornada de flores será:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Instalar Chocolatey&lt;/li&gt;
  &lt;li&gt;Instalar Ruby (a través de Chocolatey)&lt;/li&gt;
  &lt;li&gt;Instalar Jekyll&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;¿Choco qué?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt; es un excelente gestor de paquetes al estilo Linux, solo que para Windows.
¡Sí, puedes usar la consola de comandos de Windows para instalar programas! En el día de creación
de este post, hay casi 3800 paquetes que &lt;a href=&quot;https://chocolatey.org/packages&quot;&gt;puedes instalar&lt;/a&gt;.&lt;/p&gt;

&lt;p id=&quot;wokili&quot;&gt; Espera... ¿Quién eres tú?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Soy una línea en negrita que simula una voz en tu cabeza. ¿De veras crees&lt;/strong&gt;
&lt;strong&gt;que el blog conseguirá visitas inventándome?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No lo sé, igual podemos eliminarte después.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Ehmm, podemos comenzar ya?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bien, vamos a instalarlo. Abre una consola con permisos administrativos y escribe:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-powershell&quot;&gt;
@powershell -NoProfile -ExecutionPolicy Bypass -Command &quot;iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;amp;&amp;amp; SET PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Cuando se instale, necesitarás cerrar la consola y abrir una nueva (También con permisos administrativos).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¿Y ahora?&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;
choco install ruby -y
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;¿Luego? Estoy impaciente&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cierras y abres una nueva consola (Tranquilo…)&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;
gem install jekyll
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Y eso es todo lo que se necesita. Ahora puedes comenzar a crear sitios estáticos
fácil y sin dolor.&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;
jekyll new mysite
cd mysite
jekyll serve
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;A propósito, este sitio está soportado en Jekyll y albergado
en Github. Si quieres, puedes echar un vistazo al &lt;a href=&quot;https://github.com/KhanMaytok/maytok-blog-source&quot;&gt;repositorio&lt;/a&gt;. 
(Siento el código desordenado, prometo echarle una revisión después)&lt;/p&gt;

&lt;p&gt;El template está basado por completo en un &lt;a href=&quot;http://tympanus.net/codrops/2015/04/15/grid-item-animation-layout/&quot;&gt;artículo&lt;/a&gt; de &lt;a href=&quot;http://tympanus.net/codrops/author/crnacura/&quot;&gt;Mary Lou&lt;/a&gt; 
para &lt;a href=&quot;http://tympanus.net/codrops&quot;&gt;Codrops&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Apr 2016 10:04:34 -0500</pubDate>
        <link>http://dev.maytok.com/jekyll/2016/04/14/jekyll-windows-sin-dolor/</link>
        <guid isPermaLink="true">http://dev.maytok.com/jekyll/2016/04/14/jekyll-windows-sin-dolor/</guid>
        
        <category>jekyll</category>
        
        <category>ruby</category>
        
        <category>windows</category>
        
        
        <category>Jekyll</category>
        
      </item>
    
  </channel>
</rss>
